   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"crt.c"
  23              	.Ltext0:
  24              		.file 1 "crt.c"
 18314              		.align	1
 18315              		.global	crt_init
 18316              		.thumb
 18317              		.thumb_func
 18319              	crt_init:
 18320              	.LFB27:
   0:crt.c         **** #include "crt.h"
   1:crt.c         **** #include "stm32f10x_it.h"
   2:crt.c         **** 
   3:crt.c         **** void Reset_Handler(void) __attribute__((__interrupt__));
   4:crt.c         **** 
   5:crt.c         **** extern int  main(void);
   6:crt.c         **** 
   7:crt.c         **** #ifdef  __cplusplus
   8:crt.c         **** extern "C" {
   9:crt.c         **** #endif
  10:crt.c         **** 
  11:crt.c         **** extern void xPortPendSVHandler(void);
  12:crt.c         **** extern void xPortSysTickHandler(void);
  13:crt.c         **** extern void vPortSVCHandler( void );
  14:crt.c         **** 
  15:crt.c         **** 
  16:crt.c         **** #ifdef  __cplusplus
  17:crt.c         ****    }
  18:crt.c         **** #endif
  19:crt.c         **** 
  20:crt.c         **** /* init value for the stack pointer. defined in linker script */
  21:crt.c         **** extern unsigned _stack_end_;
  22:crt.c         **** 
  23:crt.c         **** __attribute__ ((section(".flash_vec_table")))
  24:crt.c         **** IrqHandlerFunc flash_vec_table[] =
  25:crt.c         **** {
  26:crt.c         ****   (IrqHandlerFunc)&_stack_end_,            /* The initial stack pointer*/
  27:crt.c         ****   Reset_Handler,             /* The reset handler*/
  28:crt.c         ****   NMIException,
  29:crt.c         ****   HardFaultException,
  30:crt.c         ****   MemManageException,
  31:crt.c         ****   BusFaultException,
  32:crt.c         ****   UsageFaultException,
  33:crt.c         ****   0, 0, 0, 0,            /* Reserved */
  34:crt.c         ****   SVCHandler,
  35:crt.c         ****   DebugMonitor,
  36:crt.c         ****   0,                      /* Reserved */
  37:crt.c         ****   PendSVC,
  38:crt.c         ****   SysTickHandler,
  39:crt.c         ****   WWDG_IRQHandler,
  40:crt.c         ****   PVD_IRQHandler,
  41:crt.c         ****   TAMPER_IRQHandler,
  42:crt.c         ****   RTC_IRQHandler,
  43:crt.c         ****   FLASH_IRQHandler,
  44:crt.c         ****   RCC_IRQHandler,
  45:crt.c         ****   EXTI0_IRQHandler,
  46:crt.c         ****   EXTI1_IRQHandler,
  47:crt.c         ****   EXTI2_IRQHandler,
  48:crt.c         ****   EXTI3_IRQHandler,
  49:crt.c         ****   EXTI4_IRQHandler,
  50:crt.c         ****   DMA1_Channel1_IRQHandler,
  51:crt.c         ****   DMA1_Channel2_IRQHandler,
  52:crt.c         ****   DMA1_Channel3_IRQHandler,
  53:crt.c         ****   DMA1_Channel4_IRQHandler,
  54:crt.c         ****   DMA1_Channel5_IRQHandler,
  55:crt.c         ****   DMA1_Channel6_IRQHandler,
  56:crt.c         ****   DMA1_Channel7_IRQHandler,
  57:crt.c         ****   ADC1_2_IRQHandler,
  58:crt.c         ****   USB_HP_CAN_TX_IRQHandler,
  59:crt.c         ****   USB_LP_CAN_RX0_IRQHandler,
  60:crt.c         ****   CAN_RX1_IRQHandler,
  61:crt.c         ****   CAN_SCE_IRQHandler,
  62:crt.c         ****   EXTI9_5_IRQHandler,
  63:crt.c         ****   TIM1_BRK_IRQHandler,
  64:crt.c         ****   TIM1_UP_IRQHandler,
  65:crt.c         ****   TIM1_TRG_COM_IRQHandler,
  66:crt.c         ****   TIM1_CC_IRQHandler,
  67:crt.c         ****   TIM2_IRQHandler,
  68:crt.c         ****   TIM3_IRQHandler,
  69:crt.c         ****   TIM4_IRQHandler,
  70:crt.c         ****   I2C1_EV_IRQHandler,
  71:crt.c         ****   I2C1_ER_IRQHandler,
  72:crt.c         ****   I2C2_EV_IRQHandler,
  73:crt.c         ****   I2C2_ER_IRQHandler,
  74:crt.c         ****   SPI1_IRQHandler,
  75:crt.c         ****   SPI2_IRQHandler,
  76:crt.c         ****   USART1_IRQHandler,
  77:crt.c         ****   USART2_IRQHandler,
  78:crt.c         ****   USART3_IRQHandler,
  79:crt.c         ****   EXTI15_10_IRQHandler,
  80:crt.c         ****   RTCAlarm_IRQHandler,
  81:crt.c         ****   USBWakeUp_IRQHandler,
  82:crt.c         ****   TIM8_BRK_IRQHandler,
  83:crt.c         ****   TIM8_UP_IRQHandler,
  84:crt.c         ****   TIM8_TRG_COM_IRQHandler,
  85:crt.c         ****   TIM8_CC_IRQHandler,
  86:crt.c         ****   ADC3_IRQHandler,
  87:crt.c         ****   FSMC_IRQHandler,
  88:crt.c         ****   SDIO_IRQHandler,
  89:crt.c         ****   TIM5_IRQHandler,
  90:crt.c         ****   SPI3_IRQHandler,
  91:crt.c         ****   UART4_IRQHandler,
  92:crt.c         ****   UART5_IRQHandler,
  93:crt.c         ****   TIM6_IRQHandler,
  94:crt.c         ****   TIM7_IRQHandler,
  95:crt.c         ****   DMA2_Channel1_IRQHandler,
  96:crt.c         ****   DMA2_Channel2_IRQHandler,
  97:crt.c         ****   DMA2_Channel3_IRQHandler,
  98:crt.c         ****   DMA2_Channel4_5_IRQHandler,
  99:crt.c         **** };
 100:crt.c         **** 
 101:crt.c         **** void crt_init()
 102:crt.c         **** {
 18321              		.loc 1 103 0
 18322              		@ args = 0, pretend = 0, frame = 0
 18323              		@ frame_needed = 0, uses_anonymous_args = 0
 18324 0000 08B5     		push	{r3, lr}
 18325              	.LCFI0:
 103:crt.c         ****   // коприрование инициализированных данных в ОЗУ (секция .data)
 104:crt.c         ****   extern uint32_t _data_load_start_ ;
 105:crt.c         ****   extern uint32_t _data_start_ ;
 106:crt.c         ****   extern uint32_t _data_end_ ;
 107:crt.c         ****   volatile  uint32_t* data_load = &_data_load_start_ ;
 18326              		.loc 1 108 0
 18327 0002 104A     		ldr	r2, .L10
 18328              	.LVL0:
 108:crt.c         ****   volatile  uint32_t* data = &_data_start_ ;
 18329              		.loc 1 109 0
 18330 0004 104B     		ldr	r3, .L10+4
 18331              	.LVL1:
 109:crt.c         ****   volatile  uint32_t* data_end = &_data_end_ ;
 18332              		.loc 1 110 0
 18333 0006 1149     		ldr	r1, .L10+8
 18334              	.LVL2:
 110:crt.c         ****   while( data < data_end )
 18335              		.loc 1 111 0
 18336 0008 03E0     		b	.L2
 18337              	.LVL3:
 18338              	.L3:
 111:crt.c         ****          {
 112:crt.c         ****           *(data++) = *(data_load++);
 18339              		.loc 1 113 0
 18340 000a 52F8040B 		ldr	r0, [r2], #4
 18341 000e 43F8040B 		str	r0, [r3], #4
 18342              	.LVL4:
 18343              	.L2:
 111:crt.c         ****          {
 18344              		.loc 1 111 0 discriminator 1
 18345 0012 8B42     		cmp	r3, r1
 18346 0014 F9D3     		bcc	.L3
 18347              	.LVL5:
 113:crt.c         ****          }
 114:crt.c         **** 
 115:crt.c         ****   // копирование секции .fast в ОЗУ
 116:crt.c         ****   extern unsigned _fast_load_start_ ;
 117:crt.c         ****   extern unsigned _fast_start_ ;
 118:crt.c         ****   extern unsigned _fast_end_   ;
 119:crt.c         ****   unsigned *fast_load = &_fast_load_start_ ;
 18348              		.loc 1 120 0
 18349 0016 0E4A     		ldr	r2, .L10+12
 18350              	.LVL6:
 120:crt.c         ****   unsigned *fast = &_fast_start_ ;
 18351              		.loc 1 121 0
 18352 0018 0E4B     		ldr	r3, .L10+16
 18353              	.LVL7:
 121:crt.c         ****   unsigned *fast_end = &_fast_end_ ;
 18354              		.loc 1 122 0
 18355 001a 0F49     		ldr	r1, .L10+20
 18356              	.LVL8:
 18357 001c 03E0     		b	.L4
 18358              	.LVL9:
 18359              	.L5:
 122:crt.c         ****   // коприрование кода в ОЗУ (секция .fast)
 123:crt.c         ****   while(fast < fast_end )
 124:crt.c         ****        {
 125:crt.c         ****         *(fast++) = *(fast_load++);
 18360              		.loc 1 126 0
 18361 001e 52F804CB 		ldr	ip, [r2], #4
 18362 0022 43F804CB 		str	ip, [r3], #4
 18363              	.LVL10:
 18364              	.L4:
 122:crt.c         ****   // коприрование кода в ОЗУ (секция .fast)
 18365              		.loc 1 122 0 discriminator 1
 18366 0026 8B42     		cmp	r3, r1
 18367 0028 F9D3     		bcc	.L5
 18368              	.LVL11:
 126:crt.c         ****        }
 127:crt.c         **** 
 128:crt.c         ****   // инициализация данных в ОЗУ нулями(секция .bss)
 129:crt.c         ****   extern unsigned _bss_start_ ;
 130:crt.c         ****   extern unsigned _bss_end_   ;
 131:crt.c         ****   unsigned *bss = &_bss_start_ ;
 18369              		.loc 1 132 0 discriminator 1
 18370 002a 0C4B     		ldr	r3, .L10+24
 18371              	.LVL12:
 132:crt.c         ****   unsigned *bss_end = &_bss_end_ ;
 18372              		.loc 1 133 0 discriminator 1
 18373 002c 0C49     		ldr	r1, .L10+28
 133:crt.c         ****   while(bss < bss_end )
 134:crt.c         ****    {
 135:crt.c         ****     *(bss++) = 0 ;
 18374              		.loc 1 136 0 discriminator 1
 18375 002e 0022     		movs	r2, #0
 18376 0030 01E0     		b	.L6
 18377              	.LVL13:
 18378              	.L7:
 18379              		.loc 1 136 0 is_stmt 0
 18380 0032 43F8042B 		str	r2, [r3], #4
 18381              	.LVL14:
 18382              	.L6:
 133:crt.c         ****   while(bss < bss_end )
 18383              		.loc 1 133 0 is_stmt 1 discriminator 1
 18384 0036 8B42     		cmp	r3, r1
 18385 0038 FBD3     		bcc	.L7
 18386              	.LVL15:
 136:crt.c         ****    }
 137:crt.c         **** 
 138:crt.c         ****   // инициализация системной библиотеки
 139:crt.c         ****   extern __attribute__ ((weak)) void __libc_init_array(void);
 140:crt.c         ****   if (__libc_init_array)
 18387              		.loc 1 141 0
 18388 003a 0A4B     		ldr	r3, .L10+32
 18389              	.LVL16:
 18390 003c 0BB1     		cbz	r3, .L1
 141:crt.c         ****       __libc_init_array() ;
 18391              		.loc 1 142 0
 18392 003e FFF7FEFF 		bl	__libc_init_array
 18393              	.L1:
 142:crt.c         **** 
 143:crt.c         **** }
 18394              		.loc 1 144 0
 18395 0042 08BD     		pop	{r3, pc}
 18396              	.L11:
 18397              		.align	2
 18398              	.L10:
 18399 0044 00000000 		.word	_data_load_start_
 18400 0048 00000000 		.word	_data_start_
 18401 004c 00000000 		.word	_data_end_
 18402 0050 00000000 		.word	_fast_load_start_
 18403 0054 00000000 		.word	_fast_start_
 18404 0058 00000000 		.word	_fast_end_
 18405 005c 00000000 		.word	_bss_start_
 18406 0060 00000000 		.word	_bss_end_
 18407 0064 00000000 		.word	__libc_init_array
 18408              	.LFE27:
 18410              		.section	.text.Reset_Handler,"ax",%progbits
 18411              		.align	1
 18412              		.global	Reset_Handler
 18413              		.thumb
 18414              		.thumb_func
 18416              	Reset_Handler:
 18417              	.LFB28:
 144:crt.c         **** 
 145:crt.c         **** void Reset_Handler(void) {
 18418              		.loc 1 146 0
 18419              		@ Stack Align: May be called with mis-aligned SP.
 18420              		@ args = 0, pretend = 0, frame = 0
 18421              		@ frame_needed = 0, uses_anonymous_args = 0
 18422 0000 6846     		mov	r0, sp
 18423              	.LCFI1:
 18424 0002 20F00701 		bic	r1, r0, #7
 18425 0006 8D46     		mov	sp, r1
 18426 0008 01B5     		push	{r0, lr}
 18427              	.LCFI2:
 146:crt.c         ****    crt_init();
 18428              		.loc 1 147 0
 18429 000a FFF7FEFF 		bl	crt_init
 147:crt.c         **** 
 148:crt.c         ****    main();
 18430              		.loc 1 149 0
 18431 000e FFF7FEFF 		bl	main
 149:crt.c         **** }
 18432              		.loc 1 150 0
 18433 0012 BDE80140 		pop	{r0, lr}
 18434 0016 8546     		mov	sp, r0
 18435 0018 7047     		bx	lr
 18436              	.LFE28:
 18438              		.global	flash_vec_table
 18439              		.section	.flash_vec_table,"aw",%progbits
 18440              		.align	2
 18443              	flash_vec_table:
 18444 0000 00000000 		.word	_stack_end_
 18445 0004 00000000 		.word	Reset_Handler
 18446 0008 00000000 		.word	NMIException
 18447 000c 00000000 		.word	HardFaultException
 18448 0010 00000000 		.word	MemManageException
 18449 0014 00000000 		.word	BusFaultException
 18450 0018 00000000 		.word	UsageFaultException
 18451 001c 00000000 		.word	0
 18452 0020 00000000 		.word	0
 18453 0024 00000000 		.word	0
 18454 0028 00000000 		.word	0
 18455 002c 00000000 		.word	SVCHandler
 18456 0030 00000000 		.word	DebugMonitor
 18457 0034 00000000 		.word	0
 18458 0038 00000000 		.word	PendSVC
 18459 003c 00000000 		.word	SysTickHandler
 18460 0040 00000000 		.word	WWDG_IRQHandler
 18461 0044 00000000 		.word	PVD_IRQHandler
 18462 0048 00000000 		.word	TAMPER_IRQHandler
 18463 004c 00000000 		.word	RTC_IRQHandler
 18464 0050 00000000 		.word	FLASH_IRQHandler
 18465 0054 00000000 		.word	RCC_IRQHandler
 18466 0058 00000000 		.word	EXTI0_IRQHandler
 18467 005c 00000000 		.word	EXTI1_IRQHandler
 18468 0060 00000000 		.word	EXTI2_IRQHandler
 18469 0064 00000000 		.word	EXTI3_IRQHandler
 18470 0068 00000000 		.word	EXTI4_IRQHandler
 18471 006c 00000000 		.word	DMA1_Channel1_IRQHandler
 18472 0070 00000000 		.word	DMA1_Channel2_IRQHandler
 18473 0074 00000000 		.word	DMA1_Channel3_IRQHandler
 18474 0078 00000000 		.word	DMA1_Channel4_IRQHandler
 18475 007c 00000000 		.word	DMA1_Channel5_IRQHandler
 18476 0080 00000000 		.word	DMA1_Channel6_IRQHandler
 18477 0084 00000000 		.word	DMA1_Channel7_IRQHandler
 18478 0088 00000000 		.word	ADC1_2_IRQHandler
 18479 008c 00000000 		.word	USB_HP_CAN_TX_IRQHandler
 18480 0090 00000000 		.word	USB_LP_CAN_RX0_IRQHandler
 18481 0094 00000000 		.word	CAN_RX1_IRQHandler
 18482 0098 00000000 		.word	CAN_SCE_IRQHandler
 18483 009c 00000000 		.word	EXTI9_5_IRQHandler
 18484 00a0 00000000 		.word	TIM1_BRK_IRQHandler
 18485 00a4 00000000 		.word	TIM1_UP_IRQHandler
 18486 00a8 00000000 		.word	TIM1_TRG_COM_IRQHandler
 18487 00ac 00000000 		.word	TIM1_CC_IRQHandler
 18488 00b0 00000000 		.word	TIM2_IRQHandler
 18489 00b4 00000000 		.word	TIM3_IRQHandler
 18490 00b8 00000000 		.word	TIM4_IRQHandler
 18491 00bc 00000000 		.word	I2C1_EV_IRQHandler
 18492 00c0 00000000 		.word	I2C1_ER_IRQHandler
 18493 00c4 00000000 		.word	I2C2_EV_IRQHandler
 18494 00c8 00000000 		.word	I2C2_ER_IRQHandler
 18495 00cc 00000000 		.word	SPI1_IRQHandler
 18496 00d0 00000000 		.word	SPI2_IRQHandler
 18497 00d4 00000000 		.word	USART1_IRQHandler
 18498 00d8 00000000 		.word	USART2_IRQHandler
 18499 00dc 00000000 		.word	USART3_IRQHandler
 18500 00e0 00000000 		.word	EXTI15_10_IRQHandler
 18501 00e4 00000000 		.word	RTCAlarm_IRQHandler
 18502 00e8 00000000 		.word	USBWakeUp_IRQHandler
 18503 00ec 00000000 		.word	TIM8_BRK_IRQHandler
 18504 00f0 00000000 		.word	TIM8_UP_IRQHandler
 18505 00f4 00000000 		.word	TIM8_TRG_COM_IRQHandler
 18506 00f8 00000000 		.word	TIM8_CC_IRQHandler
 18507 00fc 00000000 		.word	ADC3_IRQHandler
 18508 0100 00000000 		.word	FSMC_IRQHandler
 18509 0104 00000000 		.word	SDIO_IRQHandler
 18510 0108 00000000 		.word	TIM5_IRQHandler
 18511 010c 00000000 		.word	SPI3_IRQHandler
 18512 0110 00000000 		.word	UART4_IRQHandler
 18513 0114 00000000 		.word	UART5_IRQHandler
 18514 0118 00000000 		.word	TIM6_IRQHandler
 18515 011c 00000000 		.word	TIM7_IRQHandler
 18516 0120 00000000 		.word	DMA2_Channel1_IRQHandler
 18517 0124 00000000 		.word	DMA2_Channel2_IRQHandler
 18518 0128 00000000 		.word	DMA2_Channel3_IRQHandler
 18519 012c 00000000 		.word	DMA2_Channel4_5_IRQHandler
 18520              		.weak	__libc_init_array
 18574              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 crt.c
C:\Users\mm\AppData\Local\Temp\ccVduYbw.s:18314  .text.crt_init:00000000 $t
C:\Users\mm\AppData\Local\Temp\ccVduYbw.s:18319  .text.crt_init:00000000 crt_init
C:\Users\mm\AppData\Local\Temp\ccVduYbw.s:18399  .text.crt_init:00000044 $d
C:\Users\mm\AppData\Local\Temp\ccVduYbw.s:18411  .text.Reset_Handler:00000000 $t
C:\Users\mm\AppData\Local\Temp\ccVduYbw.s:18416  .text.Reset_Handler:00000000 Reset_Handler
C:\Users\mm\AppData\Local\Temp\ccVduYbw.s:18443  .flash_vec_table:00000000 flash_vec_table
C:\Users\mm\AppData\Local\Temp\ccVduYbw.s:18440  .flash_vec_table:00000000 $d
C:\Users\mm\AppData\Local\Temp\ccVduYbw.s:18534  .debug_frame:00000010 $d

UNDEFINED SYMBOLS
__libc_init_array
_data_load_start_
_data_start_
_data_end_
_fast_load_start_
_fast_start_
_fast_end_
_bss_start_
_bss_end_
main
_stack_end_
NMIException
HardFaultException
MemManageException
BusFaultException
UsageFaultException
SVCHandler
DebugMonitor
PendSVC
SysTickHandler
WWDG_IRQHandler
PVD_IRQHandler
TAMPER_IRQHandler
RTC_IRQHandler
FLASH_IRQHandler
RCC_IRQHandler
EXTI0_IRQHandler
EXTI1_IRQHandler
EXTI2_IRQHandler
EXTI3_IRQHandler
EXTI4_IRQHandler
DMA1_Channel1_IRQHandler
DMA1_Channel2_IRQHandler
DMA1_Channel3_IRQHandler
DMA1_Channel4_IRQHandler
DMA1_Channel5_IRQHandler
DMA1_Channel6_IRQHandler
DMA1_Channel7_IRQHandler
ADC1_2_IRQHandler
USB_HP_CAN_TX_IRQHandler
USB_LP_CAN_RX0_IRQHandler
CAN_RX1_IRQHandler
CAN_SCE_IRQHandler
EXTI9_5_IRQHandler
TIM1_BRK_IRQHandler
TIM1_UP_IRQHandler
TIM1_TRG_COM_IRQHandler
TIM1_CC_IRQHandler
TIM2_IRQHandler
TIM3_IRQHandler
TIM4_IRQHandler
I2C1_EV_IRQHandler
I2C1_ER_IRQHandler
I2C2_EV_IRQHandler
I2C2_ER_IRQHandler
SPI1_IRQHandler
SPI2_IRQHandler
USART1_IRQHandler
USART2_IRQHandler
USART3_IRQHandler
EXTI15_10_IRQHandler
RTCAlarm_IRQHandler
USBWakeUp_IRQHandler
TIM8_BRK_IRQHandler
TIM8_UP_IRQHandler
TIM8_TRG_COM_IRQHandler
TIM8_CC_IRQHandler
ADC3_IRQHandler
FSMC_IRQHandler
SDIO_IRQHandler
TIM5_IRQHandler
SPI3_IRQHandler
UART4_IRQHandler
UART5_IRQHandler
TIM6_IRQHandler
TIM7_IRQHandler
DMA2_Channel1_IRQHandler
DMA2_Channel2_IRQHandler
DMA2_Channel3_IRQHandler
DMA2_Channel4_5_IRQHandler

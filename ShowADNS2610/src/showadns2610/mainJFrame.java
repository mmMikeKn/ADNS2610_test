/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * mainJFrame.java
 *
 * Created on 23.03.2016, 16:59:49
 */
package showadns2610;

import gnu.io.CommPortIdentifier;
import gnu.io.SerialPort;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.image.BufferedImage;
import java.awt.image.WritableRaster;
import java.io.InputStream;
import javax.swing.JPanel;

/**
 *
 * @author Mm
 */
public class mainJFrame extends javax.swing.JFrame implements Runnable {

 static InputStream serIn = null;
 static SerialPort serPort = null;
 private Thread _thread;
 private BufferedImage image = new BufferedImage(180, 180, BufferedImage.TYPE_BYTE_GRAY);

 class ImageJPanel extends JPanel {

  @Override
  public Dimension getPreferredSize() {
   return new Dimension(180, 180);
  }

  @Override
  protected void paintComponent(Graphics g) {
   super.paintComponent(g);
   Graphics2D g2d = (Graphics2D) g.create();
   g2d.drawImage(image, 0, 0, this);
   g2d.dispose();
   //System.out.println("sssss");
  }
 }

 /** Creates new form mainJFrame */
 public mainJFrame() {
  initComponents();
  this.jScrollPane2.setViewportView(new ImageJPanel());
  _thread = new Thread(this);
  _thread.setDaemon(true);
  _thread.start();
 }

 /** This method is called from within the constructor to
  * initialize the form.
  * WARNING: Do NOT modify this code. The content of this method is
  * always regenerated by the Form Editor.
  */
 @SuppressWarnings("unchecked")
 // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
 private void initComponents() {

  jScrollPane1 = new javax.swing.JScrollPane();
  jTextArea1 = new javax.swing.JTextArea();
  jScrollPane2 = new javax.swing.JScrollPane();

  setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

  jTextArea1.setColumns(20);
  jTextArea1.setRows(5);
  jScrollPane1.setViewportView(jTextArea1);

  jScrollPane2.setViewportBorder(javax.swing.BorderFactory.createEtchedBorder());
  jScrollPane2.setMinimumSize(new java.awt.Dimension(190, 190));
  jScrollPane2.setPreferredSize(new java.awt.Dimension(190, 190));

  javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
  getContentPane().setLayout(layout);
  layout.setHorizontalGroup(
   layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
   .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 831, Short.MAX_VALUE)
   .addGroup(layout.createSequentialGroup()
    .addGap(109, 109, 109)
    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
    .addContainerGap())
  );
  layout.setVerticalGroup(
   layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
   .addGroup(layout.createSequentialGroup()
    .addContainerGap()
    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 293, Short.MAX_VALUE))
  );

  pack();
 }// </editor-fold>//GEN-END:initComponents

 /**
  * @param args the command line arguments
  */
 public static void main(String args[]) throws Exception {
  CommPortIdentifier portId;
  portId = CommPortIdentifier.getPortIdentifier(System.getProperty("com-port", "COM4"));
  serPort = (SerialPort) portId.open("dbg", 100);
  serPort.setSerialPortParams(115200, SerialPort.DATABITS_8, SerialPort.STOPBITS_1, SerialPort.PARITY_NONE);
  serPort.setFlowControlMode(SerialPort.FLOWCONTROL_NONE);
  serIn = serPort.getInputStream();

  java.awt.EventQueue.invokeLater(new Runnable() {

   public void run() {
    new mainJFrame().setVisible(true);
   }
  });
 }

 private void drawImg(byte data[]) {
  WritableRaster raster = image.getRaster();
  for (int h = 0; h < 180; h++) {
   for (int w = 0; w < 180; w++) {
    //int value = 127 + (int) (128 * Math.sin(w / 32.) * Math.sin(h / 32.));
    int i = w/10*18+(179-h)/10;
    int value = i < data.length ? (data[i] & 0x3F) << 2: 0;
    raster.setSample(w, h, 0, value);
   }
  }
 }

 public void run() {
  try {
   while (true) {
    if (serIn.available() > 0) {
     byte c = (byte) serIn.read();
     if (c == 0x1b) {
      while (serIn.available() == 0) {
      }
      byte s1 = (byte) serIn.read();
      while (serIn.available() == 0) {
      }
      byte s2 = (byte) serIn.read();
      int sz = (((int) s1 << 8) & 0xFF00) | ((int) s2 & 0x00FF);
      byte[] data = new byte[sz];
      for (int i = 0; i < sz; i++) {
       while (serIn.available() == 0) {
       }
       data[i] = (byte) serIn.read();
      }
      drawImg(data);
      this.jScrollPane2.repaint();
     } else {
      String s = new String();
      s += (char) c;
      this.jTextArea1.append(s);
     }
    }
   }
  } catch (Exception ex) {
   ex.printStackTrace();
  }
 }
 // Variables declaration - do not modify//GEN-BEGIN:variables
 private javax.swing.JScrollPane jScrollPane1;
 private javax.swing.JScrollPane jScrollPane2;
 private javax.swing.JTextArea jTextArea1;
 // End of variables declaration//GEN-END:variables
}
